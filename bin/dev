#!/usr/bin/python

import os
import sys

sys.path.append(os.path.join(os.path.abspath(os.curdir), "lib/"))

import re

os.environ["KIVY_NO_ARGS"] = "1"

import argparse
import binascii


from kivy.app import App
from logo.lock import PlatformFactory
from angelos.common.utils import Util

from logo.app import LogoMessenger


REGEX = r"[a-fA-F0-9]{64}"


class DevLogoMessenger(LogoMessenger):
    """Development enhancement of the real LogoMessenger."""

    def __init__(self, **kwargs):
        self.__env_name = self.__parser().parse_args().env_name
        LogoMessenger.__init__(self, **kwargs)

    @property
    def user_data_dir(self):
        return os.path.join(Util.exe_dir(), "dev_env", self.__env_name)

    @property
    def key_loader(self):
        return DevLogoMessenger.DevKeyLoader

    def __parser(self):
        parser = argparse.ArgumentParser()
        parser.add_argument(
            "-d",
            "--dev",
            choices=["primary", "secondary", "tertiary"],
            dest="env_name",
            default=None,
            required=True,
            help="Run as a development instance",
        )
        return parser

    class DevKeyLoader(PlatformFactory().get_key_loader()):
        """KeyLoader that saves the keys in clear text under development."""

        @staticmethod
        def set(master, key=None):
            app = App.get_running_app()

            with open(os.path.join(app.user_data_dir, "key.txt"), "w+") as key_file:
                key_file.write(binascii.hexlify(master).decode())

        @staticmethod
        def get():
            app = App.get_running_app()
            key = ""
            with open(os.path.join(app.user_data_dir, "key.txt"), "r") as key_file:
                data = key_file.read()
                match = re.findall(REGEX, data, re.MULTILINE)
                if len(match) != 1:
                    return None
                data = match[0]
                key = binascii.unhexlify(data)
            return key

        @staticmethod
        def redo():
            DevLogoMessenger.DevKeyLoader.set(DevLogoMessenger.DevKeyLoader.get())


if __name__ == "__main__":
    DevLogoMessenger().run()